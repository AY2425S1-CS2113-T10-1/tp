@startuml
title AddCommand Sequence Diagram

participant User
participant AddCommand
participant uiCommand
participant Internship
participant InternshipList


User->AddCommand:execute(args)
activate AddCommand #red
AddCommand-->uiCommand:clearInvalidFlags()
activate uiCommand #green
AddCommand->AddCommand : Initialize variables

loop for each arg in args
  AddCommand -> AddCommand : split arg into flag and data
  alt flag == "role"
    AddCommand -> AddCommand: hasRole = true
    alt data is present
      AddCommand-> AddCommand: set role
    else
      AddCommand -> uiCommand: addInvalidFlag("role")
    end
  else flag -- "company"
    AddCommand -> AddCommand: hasCompany = true
    alt data is present
      AddCommand->AddCommand: set company
    else
      AddCommand->uiCommand: addInvalidFlag("company")
    end
  else flag == "from"
        alt data is present
            AddCommand -> AddCommand: set startDate
        else
            AddCommand -> uiCommand: addInvalidFlag("from")
        end
    else flag == "to"
        alt data is present
            AddCommand -> AddCommand: set endDate
        else
            AddCommand -> uiCommand: addInvalidFlag("to")
        end
    else
        AddCommand -> uiCommand: addInvalidFlag(flag)
    end
end

alt invalid flags found
  AddCommand->uiCommand: printInvalidFlags()
else all required flags present
  AddCommand -> Internship: new Internship(role, company, startDate, endDate)
  activate Internship #blue
  AddCommand-> InternshipList: addInternship(newInternship)
  activate InternshipList #aquamarine
  deactivate Internship
  deactivate InternshipList
  AddCommand -> uiCommand: showEditedInternship(newInternship, "add")
  deactivate uiCommand
end

@enduml