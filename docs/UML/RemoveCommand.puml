@startuml
title RemoveCommand Sequence Diagram

participant User
participant RemoveCommand
participant uiCommand
participant Internship
participant InternshipList
participant UiInternshipList

activate InternshipList #orange
activate UiInternshipList #yellow
activate Internship #lightblue

User -> RemoveCommand:execute(args)
activate RemoveCommand #red
activate uiCommand #green

RemoveCommand -> InternshipList:isWithinBounds(index)
break Not in Bounds
    InternshipList -> UiInternshipList:showInvalidIndex()
    UiInternshipList --> User:show invalid index message
    InternshipList --> RemoveCommand: false
end

InternshipList --> RemoveCommand: true

RemoveCommand -> uiCommand:clearInvalidFlags()
RemoveCommand -> uiCommand:clearUpdatedFields()
RemoveCommand -> uiCommand:clearInvalidFields()

loop for arg in (args)
    RemoveCommand -> RemoveCommand:updateOneField(words, internshipIndex)
    activate RemoveCommand #red
    alt skills || deadline
        RemoveCommand -> RemoveCommand:isValidValue(words)
        activate RemoveCommand #red
        RemoveCommand --> RemoveCommand
        deactivate RemoveCommand

        RemoveCommand -> InternshipList:removeField(index, field, value)
        alt skills
            InternshipList -> Internship:get(index)
            Internship -> Internship:removeSkill(value)
        else deadline
            InternshipList -> Internship:get(index)
            Internship -> Internship:removeDeadline(value)
        else default
        end

        RemoveCommand -> uiCommand:addUpdatedField(field, value, type)

    else default
        RemoveCommand -> uiCommand:addInvalidFlag(field)
    end

    RemoveCommand --> RemoveCommand
    deactivate RemoveCommand
end

RemoveCommand -> uiCommand:showEditedInternships(internship, action)

uiCommand -> uiCommand:getInvalidFlags();
uiCommand -> uiCommand:getInvalidFields();

alt add

else word
 uiCommand -> uiCommand:getUpdatedFields()

else default

end

uiCommand -> uiCommand:showOutput(message)
uiCommand --> User:print output

@enduml